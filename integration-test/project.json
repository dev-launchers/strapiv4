{
	"info": {
		"_postman_id": "ef08e91f-4c54-4535-8cb2-c67eafa3008c",
		"name": "project-integration-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23207395",
		"_collection_link": "https://planetary-sunset-570862.postman.co/workspace/DevLaunchers~ccbd0f9c-ee35-4275-b2ce-f2bfbb1fd054/collection/23207395-ef08e91f-4c54-4535-8cb2-c67eafa3008c?action=share&source=collection_link&creator=23207395"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"identifier\": \"integration-test@devlaunchers.org\",\n  \"password\": \"integration-test\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth/local",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth",
						"local"
					]
				}
			},
			"response": []
		},
		{
			"name": "get projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const project = pm.response.json();",
							"",
							"pm.test(\"Project data is valid\", () => {",
							"",
							"  pm.expect(project).to.be.an(\"object\")",
							"  pm.expect(project.data).to.be.an(\"array\")",
							"  pm.expect(project).to.have.all.keys(\"data\", \"meta\")",
							"",
							"});",
							"",
							"",
							"const expectedSchema = {",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"data\": {",
							"      \"type\": \"array\",",
							"      \"items\": {",
							"        \"type\": \"object\",",
							"        \"properties\": {",
							"          \"id\": { \"type\": \"integer\" },",
							"          \"attributes\": {",
							"            \"type\": \"object\",",
							"            \"properties\": {",
							"              \"slug\": { \"type\": \"string\" },",
							"              \"catchPhase\": { \"type\": \"string\" },",
							"              \"title\": { \"type\": \"string\" },",
							"              \"vision\": { \"type\": \"string\" },",
							"              \"description\": { \"type\": \"string\" },",
							"              \"commitmentLevel\": { \"type\": \"string\" },",
							"              \"signupFormUrl\": { \"type\": \"string\" },",
							"              \"calendarId\": { \"type\": [\"string\", \"null\"] },",
							"              \"isListed\": { \"type\": \"boolean\" },",
							"              \"discordWebhookUrl\": { \"type\": [\"string\", \"null\"] },",
							"              \"createdAt\": { \"type\": \"string\", \"format\": \"date-time\" },",
							"              \"updatedAt\": { \"type\": \"string\", \"format\": \"date-time\" },",
							"              \"publishedAt\": { \"type\": \"string\", \"format\": \"date-time\" }",
							"            },",
							"            \"required\": [",
							"              \"slug\",",
							"              \"catchPhase\",",
							"              \"title\",",
							"              \"vision\",",
							"              \"description\",",
							"              \"commitmentLevel\",",
							"              \"signupFormUrl\",",
							"              \"isListed\",",
							"            ]",
							"          }",
							"        },",
							"        \"required\": [\"id\"]",
							"      }",
							"    },",
							"    \"meta\": {",
							"      \"type\": \"object\",",
							"      \"properties\": {",
							"        \"pagination\": {",
							"          \"type\": \"object\",",
							"          \"properties\": {",
							"            \"page\": { \"type\": \"integer\" },",
							"            \"pageSize\": { \"type\": \"integer\" },",
							"            \"pageCount\": { \"type\": \"integer\" },",
							"            \"total\": { \"type\": \"integer\" }",
							"          },",
							"        }",
							"      },",
							"    }",
							"  },",
							"  \"required\": [\"data\", \"meta\"]",
							"}",
							"",
							"pm.test(\"Verify JSON Schema\", ()=>{",
							"    pm.response.to.have.jsonSchema(expectedSchema)",
							"})",
							"",
							"pm.globals.set(\"projectId\", project.data[0].id)",
							"console.log(project.data[0].id)",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/projects",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		}
	]
}
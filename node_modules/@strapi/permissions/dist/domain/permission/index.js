"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProperty = exports.addCondition = exports.sanitizePermissionFields = exports.create = void 0;
const fp_1 = __importDefault(require("lodash/fp"));
const PERMISSION_FIELDS = ['action', 'subject', 'properties', 'conditions'];
const sanitizePermissionFields = fp_1.default.pick(PERMISSION_FIELDS);
exports.sanitizePermissionFields = sanitizePermissionFields;
/**
 * Creates a permission with default values for optional properties
 */
const getDefaultPermission = () => ({
    conditions: [],
    properties: {},
    subject: null,
});
/**
 * Create a new permission based on given attributes
 *
 * @param {object} attributes
 */
const create = fp_1.default.pipe(fp_1.default.pick(PERMISSION_FIELDS), fp_1.default.merge(getDefaultPermission()));
exports.create = create;
/**
 * Add a condition to a permission
 */
const addCondition = fp_1.default.curry((condition, permission) => {
    const { conditions } = permission;
    const newConditions = Array.isArray(conditions)
        ? fp_1.default.uniq(conditions.concat(condition))
        : [condition];
    return fp_1.default.set('conditions', newConditions, permission);
});
exports.addCondition = addCondition;
/**
 * Gets a property or a part of a property from a permission.
 */
const getProperty = fp_1.default.curry((property, permission) => fp_1.default.get(`properties.${property}`, permission));
exports.getProperty = getProperty;
//# sourceMappingURL=index.js.map
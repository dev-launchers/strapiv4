"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fp_1 = require("lodash/fp");
const utils_1 = require("../utils");
exports.default = (restrictedFields = null) => ({ key, path: { attribute: path } }) => {
    // all fields
    if (restrictedFields === null) {
        (0, utils_1.throwInvalidParam)({ key });
    }
    // Throw on invalid formats
    if (!((0, fp_1.isArray)(restrictedFields) && restrictedFields.every(fp_1.isString))) {
        throw new TypeError(`Expected array of strings for restrictedFields but got "${typeof restrictedFields}"`);
    }
    // if an exact match was found
    if (restrictedFields.includes(path)) {
        (0, utils_1.throwInvalidParam)({ key });
    }
    // nested matches
    const isRestrictedNested = restrictedFields.some((allowedPath) => path?.toString().startsWith(`${allowedPath}.`));
    if (isRestrictedNested) {
        (0, utils_1.throwInvalidParam)({ key });
    }
};
//# sourceMappingURL=throw-restricted-fields.js.map
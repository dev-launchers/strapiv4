{
  "info": {
    "_postman_id": "725a8508-2b00-4608-9c31-7bac626b0f4b",
    "name": "strapiv4-integration-test",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "auth",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"identifier\": \"integration-test@devlaunchers.org\",\r\n  \"password\": \"integration-test\"\r\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{base_url}}/auth/local",
          "host": ["{{base_url}}"],
          "path": ["auth", "local"]
        }
      },
      "response": []
    },
    {
      "name": "get user",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"User is integration-test\", () => {\r",
              "  const user = pm.response.json();\r",
              "  pm.expect(user.username).to.eql(\"integration-test\");\r",
              "  pm.expect(user.email).to.eql(\"integration-test@devlaunchers.org\");\r",
              "  pm.expect(user.discordUsername).to.eql(\"integration-test\");\r",
              "  pm.expect(user.discordId).to.eql(\"integration-test#3025\");\r",
              "  pm.expect(user.googleId).to.eql(\"integration-test\");\r",
              "  pm.expect(user.userId).to.eql(\"5169825f-5cbc-450a-9443-561b2a42059a\");\r",
              "  pm.expect(user.birthday).to.eql(\"1996-08-15\");\r",
              "  pm.expect(user.country).to.eql(\"U.S.\");\r",
              "  pm.expect(user.zipCode).to.eql(77478);\r",
              "\r",
              "  pm.expect(user.projects.length).to.equal(1);\r",
              "  const project = user.projects[0];\r",
              "  pm.expect(project.slug).to.equal(\"Dev-Recruiting\");\r",
              "\r",
              "  pm.expect(user.interests.length).to.equal(1);\r",
              "  const interest = user.interests[0];\r",
              "  pm.expect(interest.interest).to.eql(\"Web Dev\");\r",
              "});\r",
              "\r",
              "\r",
              "\r",
              "\r",
              "const expectedSchema = {\r",
              "  \"type\": \"object\",\r",
              "  \"properties\": {\r",
              "    \"id\": { \"type\": \"integer\" },\r",
              "    \"username\": { \"type\": \"string\" },\r",
              "    \"email\": { \"type\": \"string\", \"format\": \"email\" },\r",
              "    \"provider\": { \"type\": \"string\" },\r",
              "    \"confirmed\": { \"type\": \"boolean\" },\r",
              "    \"blocked\": { \"type\": \"boolean\" },\r",
              "    \"discordId\": { \"type\": [\"string\", \"null\"] },\r",
              "    \"googleId\": { \"type\": [\"string\", \"null\"] },\r",
              "    \"discordUsername\": { \"type\": [\"string\", \"null\"] },\r",
              "    \"userId\": { \"type\": [\"string\", \"null\"] },\r",
              "    \"birthday\": { \"type\": [\"string\", \"null\"], \"format\": \"date\" },\r",
              "    \"country\": { \"type\": [\"string\", \"null\"] },\r",
              "    \"zipCode\": { \"type\": [\"integer\", \"null\"] },\r",
              "    \"hasAcceptedTermsOfService\": { \"type\": [\"boolean\", \"null\"] },\r",
              "    \"hasSubscribedEmails\": { \"type\": [\"boolean\", \"null\"] },\r",
              "    \"discord_avatar\": { \"type\": [\"string\", \"null\"] },\r",
              "    \"discord_discriminator\": { \"type\": [\"string\", \"null\"] },\r",
              "    \"job\": { \"type\": \"string\" },\r",
              "    \"experience\": { \"type\": [\"string\", \"null\"] },\r",
              "    \"schedule\": { \"type\": [\"object\", \"null\"] },\r",
              "    \"completedOnboarding\": { \"type\": \"boolean\" },\r",
              "    \"createdAt\": { \"type\": \"string\", \"format\": \"date-time\" },\r",
              "    \"updatedAt\": { \"type\": \"string\", \"format\": \"date-time\" },\r",
              "    \"role\": {\r",
              "      \"type\": \"object\",\r",
              "      \"properties\": {\r",
              "        \"id\": { \"type\": \"integer\" },\r",
              "        \"name\": { \"type\": \"string\" },\r",
              "        \"description\": { \"type\": \"string\" },\r",
              "        \"type\": { \"type\": \"string\" },\r",
              "        \"createdAt\": { \"type\": \"string\", \"format\": \"date-time\" },\r",
              "        \"updatedAt\": { \"type\": \"string\", \"format\": \"date-time\" }\r",
              "      },\r",
              "    },\r",
              "    \"projects\": {\r",
              "      \"type\": \"array\",\r",
              "      \"items\": {\r",
              "        \"type\": \"object\",\r",
              "        \"properties\": {\r",
              "          \"slug\": { \"type\": \"string\" }\r",
              "        },\r",
              "        \"required\": [\"slug\"]\r",
              "      }\r",
              "    },\r",
              "    \"interests\": {\r",
              "      \"type\": \"array\",\r",
              "      \"items\": {\r",
              "        \"type\": \"object\",\r",
              "        \"properties\": {\r",
              "          \"interest\": { \"type\": \"string\" }\r",
              "        },\r",
              "        \"required\": [\"interest\"]\r",
              "      }\r",
              "    }\r",
              "  },\r",
              "  \"required\": [\"id\", \"username\", \"email\"]\r",
              "}\r",
              "\r",
              "\r",
              "pm.test(\"Verify JSON Schema\", ()=>{\r",
              "    pm.response.to.have.jsonSchema(expectedSchema)\r",
              "})\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/users/me?populate=*",
          "host": ["{{base_url}}"],
          "path": ["users", "me"],
          "query": [
            {
              "key": "populate",
              "value": "*"
            }
          ]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "pm.test(\"Status code is 200\", function () {",
          "  pm.response.to.have.status(200);",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:1337/api",
      "type": "default"
    }
  ]
}
